library(ggpubr)
install.packages('Kendall')
library(Kendall)
source("http://peterhaschke.com/Code/multiplot.R")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
library(plyr)
library(dplyr)
library(Matrix)
library(tidyverse)
library(readr)
library(ggplot2)
library(tibble)
library(ggrepel)
library(flexmix)
library(modelr)
#install.packages('magrittr')
library(magrittr)
library(dplyr)
#install.packages('paletteer')
library(paletteer)
#install.packages('ggpubr')
library(ggpubr)
#install.packages('Kendall')
library(Kendall)
source("http://peterhaschke.com/Code/multiplot.R")
## INPUT THE DATA ##
## -------------- ##
data <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_input/model_input_0707.csv')
na_data <- data[is.na(data)] # Check for NA data in the file
data <- data[-c(1)] # Remove python index value column
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_output/Figures/acreft_hist.pdf',
width=6,
height=4)
ggplot(data=data)+
aes(x=Sum_AF)+
geom_histogram(color='black')+
ylab('Count')+
xlab('Annual Discharge (AF/yr)')+
theme_bw()
dev.off()
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_output/Figures/SD_AF_hist.pdf',
width=6,
height=4)
ggplot(data=data)+
aes(x=SD_AF)+
geom_histogram(color='black')+
ylab('Count')+
xlab('Annual Discharge (AF/yr)')+
theme_bw()
dev.off()
#omitted from iniital packages
#make sure dbplyr is installed
library(magrittr)
library(dplyr)
urb_change <- data %>%
select(Name, class1_urban, Sum_AF) %>%
group_by(Name) %>%
summarize(change = max(class1_urban) - min(class1_urban),
maximum = max(class1_urban),
AF = mean(Sum_AF))
names <- unique(data$Name)
names <- unique(data$Name)
for (i in names){
subdata <- subset(data, Name == i)
model <- lm(Sum_AF ~ Year, data = subdata)
slope <- coef (model)[2]
r_squared <- summary(model)$r.squared
plot_title <- paste (i, "\nSlope:", round(slope,2), "R-squared:",round(r_squared, 2))
print(ggplot(data = subdata) +
aes(x = Year, y = Sum_AF) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw() +
xlab('Year') +
ylab('Discharge (AF)') +
ggtitle(plot_title))
}
for (i in names){
subdata <- subset(data, Name == i)
print(ggplot(data = subdata) +
aes(x = class1_urban, y = Sum_AF) +
geom_point() +
geom_smooth(method = 'lm', color = '#00798c', fill = '#00798c') +
theme_bw() +
xlab('Urban Proportion') +
ylab('Discharge (AF)') +
ggtitle(i))
}
paletteer_d("colorBlindness::Blue2DarkOrange12Steps")
pal <- paletteer_d("colorBlindness::paletteMartin")
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_output/Figures/regress.pdf',
width=8,
height=5)
ggplot(data = data) +
aes(x = class1_urban, y = Sum_AF, fill = Name, color=Name) +
geom_point() +
scale_shape(solid = FALSE) +
geom_smooth(method = 'lm', aes(color = Name, fill = Name)) +
scale_fill_manual(values =c('#000000FF',
'#004949FF',
'#009292FF',
'#FF6DB6FF',
'#FFB6DBFF',
'#490092FF',
'#006DDBFF',
'#B66DFFFF',
'#6DB6FFFF',
'#B6DBFFFF',
'#920000FF',
'#924900FF',
'#DB6D00FF',
'#31A354',
'#FFAD65FF')) +
scale_color_manual(values =c('#000000FF',
'#004949FF',
'#009292FF',
'#FF6DB6FF',
'#FFB6DBFF',
'#490092FF',
'#006DDBFF',
'#B66DFFFF',
'#6DB6FFFF',
'#B6DBFFFF',
'#920000FF',
'#924900FF',
'#DB6D00FF',
'#31A354',
'#FFAD65FF'))+
theme_bw() +
xlab('Urban Proportion') +
ylab('Discharge (AF)') +
ylim(0, 120000)
dev.off()
ggplot(data = data) +
aes(x = Year, y = Sum_AF, fill = Name, color=Name) +
geom_point() +
scale_shape(solid = FALSE) +
geom_smooth(method = 'lm', aes(color = Name, fill = Name)) +
scale_fill_manual(values =c('#000000FF',
'#004949FF',
'#009292FF',
'#FF6DB6FF',
'#FFB6DBFF',
'#490092FF',
'#006DDBFF',
'#B66DFFFF',
'#6DB6FFFF',
'#B6DBFFFF',
'#920000FF',
'#924900FF',
'#DB6D00FF',
'#31A354',
'#FFAD65FF')) +
scale_color_manual(values =c('#000000FF',
'#004949FF',
'#009292FF',
'#FF6DB6FF',
'#FFB6DBFF',
'#490092FF',
'#006DDBFF',
'#B66DFFFF',
'#6DB6FFFF',
'#B6DBFFFF',
'#920000FF',
'#924900FF',
'#DB6D00FF',
'#31A354',
'#FFAD65FF'))+
theme_bw() +
xlab('Year') +
ylab('Discharge (AF)') +
coord_cartesian(ylim =c(0, 120000))
ggsave('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_output/Figures/AF_v_time.jpg',
width = 6,
height = 4,
units = 'in')
## Zoom in on the graph
sub_names <- c('Willow Creek',
'West Hartley Gulch',
'Sand Run Gulch',
'East Hartley Gulch',
'Conway Gulch',
'North Middleton')
sub_names<- data.frame(sub_names)
displaydat <- filter(data, Name %in% sub_names$sub_names)
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_output/Figures/regress-zoom.pdf',
width=5,
height=3)
ggplot(data = displaydat) +
aes(x = class1_urban, y = Sum_AF, fill = Name, color=Name) +
geom_point() +
scale_shape(solid = FALSE) +
geom_smooth(method = 'lm', aes(color = Name, fill = Name)) +
scale_fill_manual(values = c('#000000FF',
'#FFB6DBFF',
'#B6DBFFFF',
'#920000FF',
'#31A354',
'#FFAD65FF')) +
scale_color_manual(values = c('#000000FF',
'#FFB6DBFF',
'#B6DBFFFF',
'#920000FF',
"#31A354",
'#FFAD65FF')) +
theme_bw() +
xlab('Urban Proportion') +
ylab('Discharge (AF)') +
ylim(0, 80000)
dev.off()
# Scale all the variables for model input
scale2sd <- function(x){
(x - mean(x))/(sd(x)*2)
}
col_name <- c('ant_prcp',
'wy_prcp',
'irrig_temp',
'JuneAug_temp',
'class1_urban',
'class2_crops',
'contagion',
'largest_patch_index',
'et')
for (i in col_name) {
name <- colnames(data[i])
new_col_name <- paste('scale_', name, sep = "")
data[new_col_name] <- scale2sd(data[,i])
}
mean(data$scale_class1_urban)
sd(data$scale_class1_urban)
mean(data$scale_DivFlow)
sd(data$scale_DivFlow)
mean(data$scale_wy_prcp) #changed
sd(data$scale_wy_prcp) #changed
mean(data$scale_irrig_temp)
sd(data$scale_irrig_temp)
mean(data$scale_et)
sd(data$scale_et)
relates <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_input/drains/SpatialJoin_Drain.csv')
divflows <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/model_input/mixed_model_input.csv')
relates <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_input/drains/SpatialJoin_Drain.csv')
divflows <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/model_input/mixed_model_input_0707.csv')
relates <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_input/drains/SpatialJoin_Drain.csv')
divflows <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_input/mixed_model_input_0707.csv')
spatial_dict <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_input/drains/name_dictionary_spatial.csv')
spatial_dict_drain <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_input/drains/DrainRelates.csv')
spatial_dict_drain <- subset(spatial_dict_drain, select = -c(Dataset, SiteID))
spatial_dict_drain <- na.omit(spatial_dict_drain)
relates <- dplyr::left_join(relates, spatial_dict, by =('WaterRight' = 'WaterRight') )
years <- data.frame(divflows$Year, divflows$Acre_feet, divflows$Name)
years <- dplyr::left_join(years, relates, by = c('divflows.Name' = 'NewName'))
years <- subset(years, select = -c(WaterRight))
years <- na.omit(years)
years <- dplyr::left_join(years, spatial_dict_drain, by = c('Name' = 'Spatial.Name'))
sums <- years %>%
select(divflows.Year, divflows.Acre_feet, NewName) %>%
group_by(divflows.Year, NewName) %>%
summarize(DivFlow = sum(divflows.Acre_feet))
data <- dplyr :: left_join(data, sums, by = c('Name' = 'NewName',
'Year' = 'divflows.Year'))
data$scale_DivFlow <- scale2sd(data$DivFlow)
write.csv(data,'/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_input/mixed_model_input_0707.csv', row.names = FALSE)
col_names <- ('')
avgs <- data %>%
select(Name, Sum_AF) %>%
group_by(Name) %>%
summarize(avg = mean(Sum_AF))
## Perform Mann Kendall Test for each drain
rf <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_input/model_input_0707.csv')
names <- data.frame(unique(rf$Name))
for (i in names){
data <- subset(rf, Name == i)
test<- MannKendall(data$Sum_AF)
print(c(i, test$sl))
}
for (i in names){
data <- subset(rf, Name == i)
print(ggplot(data = data, aes(y= Sum_AF, x = Year)) +
geom_point() +
geom_smooth(method = 'lm') +
ggtitle(i) +
theme_bw())
}
change_names <- c('Conway Gulch',
'Eagle Drain',
'Fifteen Mile Creek',
'Mason Drain',
'South Middleton',
'Thurman Drain')
nochange_names <- c("Dixie Drain",
"Drainage District No3",
"East Hartley Gulch",
"Indian Creek",
"Mason Creek",
"North Middleton",
"Sand Run Gulch",
"West Hartley Gulch",
"Willow Creek")
change_plots <- function(dataframe, name){
plt <- ggplot(data = dataframe, aes(y= Sum_AF, x = Year)) +
geom_point() +
stat_smooth(method = 'lm', color = 'black') +
ggtitle(name) +
ylab('Discharge (AF)') +
theme_bw() +
theme(text = element_text(size = 15)) +
scale_y_continuous(labels = scales::comma)
return(plt)
}
myplots <- list()
values <- list()
change <- list()
for (i in change_names){
p <- change_plots(subset(rf, Name == i), i)
vals <- ggplot_build(p)
vals <- vals$data[[2]]
values[[i]] <- vals
print(c(i, 'Percent Decrease:', ((max(vals$y) - min(vals$y))/max(vals$y))))
print(c(i, '1987 Value:', (max(vals$y)), max(vals$y)-vals$ymin[1]))
print(c(i, '2020 Value:', (min(vals$y)), min(vals$y)-vals$ymin[80]))
change[[i]] <- max(vals$y)-min(vals$y)
myplots[[i]] <- p
}
change <- data.frame(change)
sum(change)
ggarrange(plotlist = myplots, ncol=3, nrow=2)
ggsave('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_output/Figures/mk_fig.jpg',
width = 9,
height = 5,
units = 'in')
mynoplots <- list()
for (i in nochange_names){
p <- change_plots(subset(rf, Name == i), i)
mynoplots[[i]] <- p
}
ggarrange(plotlist = mynoplots, ncol = 3, nrow=3)
ggsave('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_output/Figures/nosig_mk_fig.jpg',
width = 13,
height = 10,
units = 'in')
names <- unique(rf$Name)
for (i in names) {
sub <- subset(rf, Name == i)
print(c(i, length(sub$Sum_AF)))
}
rf_drop <- rf[rf$Name != 'Sand Run Gulch',]
sums <- rf_drop %>%
group_by(Year) %>%
summarize(total = sum(Sum_AF))
MannKendall(sums$total)
sum_plot <- ggplot(data = sums, aes(x = Year, y = total)) +
geom_point() +
theme_bw() +
geom_smooth(method = 'lm') +
ylab('Total Discharge (AF/yr)') +
xlab('Year')
# Import packages:
#install.packages('brms')
library(brms)
#install.packages('bayesplot')
library(bayesplot)
library(tidyverse)
#install.packages('tidybayes')
library(tidybayes)
library(plyr)
library(dplyr)
library(readr)
library(tibble)
library(ggrepel)
#install.packages('flexmix')
library(flexmix)
library(modelr)
library(loo)
rf <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_input/mixed_model_input_0707.csv')
rf$lt <- log(rf$Sum_AF)
## MODEL FIT ####
mae <- function(model, data_compare){
yhat <- posterior_predict(model)
resid <- sweep(yhat,
2,
data_compare,
FUN="-")
return(median(abs(resid)))
}
mae_lt <- function(model, data_compare){
yhat <- exp(posterior_predict(model))
resid <- sweep(yhat,
2,
data_compare,
FUN="-")
return(median(abs(resid)))
}
# # Create priors for model with all variables ####
priors <- c(
set_prior('normal(2,1)', class = 'Intercept'),
set_prior('normal(0,1)', class= 'sd'),
set_prior('normal(0,5)', class = 'b', coef = 'scale_class1_urban'),
set_prior('normal(0,5)', class = 'b', coef = 'et'),
set_prior('normal(0,5)', class = 'b', coef = 'scale_wy_prcp'),
set_prior('normal(0,5)', class = 'b', coef = 'scale_irrig_temp'),
set_prior('normal(0,5)', class = 'b', coef = 'scale_DivFlow')
)
# # MODEL: ALL WITH GROUP LEVEL EFFECT FOR URBAN AREA ####
rf.mix.new <- brm(Sum_AF ~ (1 + scale_class1_urban | Name) + scale_class1_urban + et + scale_wy_prcp + scale_irrig_temp + scale_DivFlow,
data = rf,
iter = 2000,
family = 'lognormal',
prior = priors,
control = list(max_treedepth = 20,
adapt_delta = 0.999),
cores = getOption('mc.cores', parallel::detectCores()))
loo1 <- loo(rf.mix.new, reloo = TRUE)
print("Model: No arma, all variables")
summary(rf.mix.new)
#
print('LOO')
loo1
#
print('MAE')
mae(rf.mix.new, rf$Sum_AF)
#
print('LOO')
loo1
#
print('MAE')
mae(rf.mix.new, rf$Sum_AF)
#
saveRDS(rf.mix.new, file = '/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_output/rf_mix.RDS')
saveRDS(loo1, file = '/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_output/loo_noarma.RDS')
#
# Create priors for mix + div_flows model ####
priors <- c(
set_prior('normal(2,1)', class = 'Intercept'),
set_prior('normal(0,1)', class= 'sd'),
set_prior('normal(0,5)', class = 'b', coef = 'scale_et'),
set_prior('normal(0,5)', class = 'b', coef = 'scale_wy_prcp'),
set_prior('normal(0,5)', class = 'b', coef = 'scale_irrig_temp'),
set_prior('normal(0,5)', class = 'b', coef = 'scale_class1_urban'),
set_prior('normal(0,5)', class = 'b', coef = 'scale_DivFlow')
)
rf_arma_full <- brm(lt ~ (1 | Name) + scale_class1_urban + scale_et + scale_wy_prcp + scale_irrig_temp + scale_DivFlow + arma( gr = Name),
data = rf,
iter = 4000,
family = 'normal',
prior = priors,
control = list(max_treedepth = 20,
adapt_delta = 0.999),
cores = getOption('mc.cores', parallel::detectCores()),
save_pars = save_pars(all = TRUE))
## Load packages ##
library(brms)
library(ggplot2)
library(Matrix)
library(tidyverse)
library(brms)
library(bayesplot)
library(tidybayes)
library(modelr)
library(dplyr)
library(ggpubr)
## Unscale function for predictor variables
unscale <- function(x, orig){
unscaled <- (sd(orig)*2*x)+mean(orig)
return(unscaled)
}
## Import data ####
rf <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_input/mixed_model_input_0707.csv')
arma_ng <- readRDS('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_output/arma_nogroup.Rdata')
summary(arma_ng)
mae_lt <- function(model, data_compare){
yhat <- exp(posterior_predict(model))
resid <- sweep(yhat,
2,
data_compare,
FUN="-")
return(median(abs(resid)))
}
mae_lt(arma_ng, rf$Sum_AF)
pp <- pp_check(arma_ng, ndraws = 20) +
theme_bw() +
ylab('Density') +
xlab('log(Discharge)')
ggsave('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_output/Figures/ppcheck.png',
plot = pp,
width = 5,
height = 4)
new = rf %>%
data_grid(scale_class1_urban = seq_range(scale_class1_urban, n = 200),
scale_et = mean(scale_et),
scale_wy_prcp = mean(scale_wy_prcp),
scale_irrig_temp = mean(scale_irrig_temp),
scale_DivFlow = mean(scale_DivFlow))
new$Name <- NA
epreddraws <-  add_epred_draws(arma_ng,
newdata=new,
ndraws=1000,
re_formula=NA
)
epreddraws <-  add_epred_draws(arma_ng,
newdata=new,
ndraws=1000,
re_formula=NA
)
