}
mae_lt(arma_ng, rf$Sum_AF)
pp <- pp_check(arma_ng, ndraws = 20) +
theme_bw() +
ylab('Density') +
xlab('log(Discharge)')
ggsave('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_output/Figures/ppcheck.png',
plot = pp,
width = 5,
height = 4)
new = rf %>%
data_grid(scale_class1_urban = seq_range(scale_class1_urban, n = 200),
scale_et = mean(scale_et),
scale_irrig_prcp = mean(scale_irrig_prcp),
scale_irrig_temp = mean(scale_irrig_temp),
scale_DivFlow = mean(scale_DivFlow),
scale_ubrb_prcp = mean(scale_ubrb_prcp),
scale_pivot_prop = mean(scale_pivot_prop),
scale_Carryover = mean(scale_Carryover),
scale_sw_wr = mean(scale_sw_wr),
scale_gw_wr = mean(scale_gw_wr))
new$Name <- NA
epreddraws <-  add_epred_draws(arma_ng,
newdata=new,
ndraws=1000,
re_formula=NA
)
epreddraws$unscale.urban <- unscale(epreddraws$scale_class1_urban, rf$class1_urban)
urban <- ggplot(data=epreddraws,
aes(x = unscale.urban, y = exp(.epred))) +
stat_lineribbon(
.width = c(.5, 0.95), alpha = 0.35, fill="#00798c",
color="black", size=2) +
ylab("Drain Discharge (Acre-ft/yr)") + xlab("Percent Urban") +
theme_bw() +
theme(text = element_text(size = 12)) +
scale_y_continuous(labels = scales::comma)
urban
sum(is.na(epreddraws$unscale.urban))
sum(is.na(epreddraws$.epred))
sum(is.infinite(epreddraws$unscale.urban))
sum(is.infinite(epreddraws$.epred))
range(epreddraws$unscale.urban)
range(epreddraws$.epred)
library(plyr)
library(dplyr)
library(Matrix)
library(tidyverse)
library(readr)
library(ggplot2)
library(tibble)
library(ggrepel)
library(flexmix)
library(modelr)
#install.packages('magrittr')
library(magrittr)
library(dplyr)
#install.packages('paletteer')
library(paletteer)
#install.packages('ggpubr')
library(ggpubr)
#install.packages('Kendall')
library(Kendall)
source("http://peterhaschke.com/Code/multiplot.R")
## INPUT THE DATA ##
## -------------- ##
data <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_input/model_input_0820.csv')
na_data <- data[is.na(data)] # Check for NA data in the file
data <- data[-c(1)] # Remove python index value column
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_output/Figures/acreft_hist.pdf',
width=6,
height=4)
ggplot(data=data)+
aes(x=Sum_AF)+
geom_histogram(color='black', binwidth = 5000)+
ylab('Count')+
xlab('Annual Discharge (AF/yr)')+
theme_bw()
dev.off()
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_output/Figures/SD_AF_hist.pdf',
width=6,
height=4)
ggplot(data=data)+
aes(x=SD_AF)+
geom_histogram(color='black', binwidth = 5000)+
ylab('Count')+
xlab('Annual Discharge (AF/yr)')+
theme_bw()
dev.off()
urb_change <- data %>%
select(Name, class1_urban, Sum_AF) %>%
group_by(Name) %>%
summarize(change = max(class1_urban) - min(class1_urban),
maximum = max(class1_urban),
AF = mean(Sum_AF))
names <- unique(data$Name)
for (i in names){
subdata <- subset(data, Name == i)
model <- lm(Sum_AF ~ Year, data = subdata)
slope <- coef (model)[2]
r_squared <- summary(model)$r.squared
plot_title <- paste (i, "\nSlope:", round(slope,2), "R-squared:",round(r_squared, 2))
print(ggplot(data = subdata) +
aes(x = Year, y = Sum_AF) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw() +
xlab('Year') +
ylab('Discharge (AF)') +
ggtitle(plot_title))
}
for (i in names){
subdata <- subset(data, Name == i)
print(ggplot(data = subdata) +
aes(x = class1_urban, y = Sum_AF) +
geom_point() +
geom_smooth(method = 'lm', color = '#00798c', fill = '#00798c') +
theme_bw() +
xlab('Urban Proportion') +
ylab('Discharge (AF)') +
ggtitle(i))
}
paletteer_d("colorBlindness::Blue2DarkOrange12Steps")
pal <- paletteer_d("colorBlindness::paletteMartin")
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_output/Figures/regress.pdf',
width=8,
height=5)
ggplot(data = data) +
aes(x = class1_urban, y = Sum_AF, fill = Name, color=Name) +
geom_point() +
scale_shape(solid = FALSE) +
geom_smooth(method = 'lm', aes(color = Name, fill = Name)) +
scale_fill_manual(values =c('#000000FF',
'#004949FF',
'#009292FF',
'#FF6DB6FF',
'#FFB6DBFF',
'#490092FF',
'#006DDBFF',
'#B66DFFFF',
'#6DB6FFFF',
'#B6DBFFFF',
'#920000FF',
'#924900FF',
'#DB6D00FF',
'#31A354',
'#FFAD65FF')) +
scale_color_manual(values =c('#000000FF',
'#004949FF',
'#009292FF',
'#FF6DB6FF',
'#FFB6DBFF',
'#490092FF',
'#006DDBFF',
'#B66DFFFF',
'#6DB6FFFF',
'#B6DBFFFF',
'#920000FF',
'#924900FF',
'#DB6D00FF',
'#31A354',
'#FFAD65FF'))+
theme_bw() +
xlab('Urban Proportion') +
ylab('Discharge (AF)') +
ylim(0, 120000)
dev.off()
ggplot(data = data) +
aes(x = Year, y = Sum_AF, fill = Name, color=Name) +
geom_point() +
scale_shape(solid = FALSE) +
geom_smooth(method = 'lm', aes(color = Name, fill = Name)) +
scale_fill_manual(values =c('#000000FF',
'#004949FF',
'#009292FF',
'#FF6DB6FF',
'#FFB6DBFF',
'#490092FF',
'#006DDBFF',
'#B66DFFFF',
'#6DB6FFFF',
'#B6DBFFFF',
'#920000FF',
'#924900FF',
'#DB6D00FF',
'#31A354',
'#FFAD65FF')) +
scale_color_manual(values =c('#000000FF',
'#004949FF',
'#009292FF',
'#FF6DB6FF',
'#FFB6DBFF',
'#490092FF',
'#006DDBFF',
'#B66DFFFF',
'#6DB6FFFF',
'#B6DBFFFF',
'#920000FF',
'#924900FF',
'#DB6D00FF',
'#31A354',
'#FFAD65FF'))+
theme_bw() +
xlab('Year') +
ylab('Discharge (AF)') +
coord_cartesian(ylim =c(0, 120000))
ggsave('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_output/Figures/AF_v_time.jpg',
width = 6,
height = 4,
units = 'in')
## Zoom in on the graph
sub_names <- c('Willow Creek',
'West Hartley Gulch',
'Sand Run Gulch',
'East Hartley Gulch',
'Conway Gulch',
'North Middleton')
sub_names<- data.frame(sub_names)
displaydat <- filter(data, Name %in% sub_names$sub_names)
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_output/Figures/regress-zoom.pdf',
width=5,
height=3)
ggplot(data = displaydat) +
aes(x = class1_urban, y = Sum_AF, fill = Name, color=Name) +
geom_point() +
scale_shape(solid = FALSE) +
geom_smooth(method = 'lm', aes(color = Name, fill = Name)) +
scale_fill_manual(values = c('#000000FF',
'#FFB6DBFF',
'#B6DBFFFF',
'#920000FF',
'#31A354',
'#FFAD65FF')) +
scale_color_manual(values = c('#000000FF',
'#FFB6DBFF',
'#B6DBFFFF',
'#920000FF',
"#31A354",
'#FFAD65FF')) +
theme_bw() +
xlab('Urban Proportion') +
ylab('Discharge (AF)') +
ylim(0, 80000)
dev.off()
# Scale all the variables for model input
scale2sd <- function(x){
(x - mean(x))/(sd(x)*2)
}
col_name <- c('ant_prcp',
'irrig_prcp',
'irrig_temp',
'JuneAug_temp',
'class1_urban',
'class2_crops',
'contagion',
'largest_patch_index',
'et',
'ubrb_prcp',
'pivot_prop',
'Carryover',
'LP_inflows',
'Max_Fill',
'gw_wr',
'sw_wr',
'total_wr')
for (i in col_name) {
name <- colnames(data[i])
new_col_name <- paste('scale_', name, sep = "")
data[new_col_name] <- scale2sd(data[,i])
}
mean(data$scale_class1_urban)
sd(data$scale_class1_urban)
mean(data$scale_DivFlow)
sd(data$scale_DivFlow)
mean(data$scale_irrig_prcp)
sd(data$scale_irrig_prcp)
mean(data$scale_irrig_temp)
sd(data$scale_irrig_temp)
mean(data$scale_et)
sd(data$scale_et)
mean(data$scale_ubrb_prcp)
sd(data$scale_ubrb_prcp)
mean(data$scale_pivot_prop)
sd(data$scale_pivot_prop)
mean(data$scale_Carryover)
sd(data$scale_Carryover)
mean(data$scale_total_wr)
sd(data$scale_total_wr)
relates <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_input/drains/SpatialJoin_Drain.csv')
divflows <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/model_input/mixed_model_input_0531.csv')
spatial_dict <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_input/drains/name_dictionary_spatial.csv')
spatial_dict_drain <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_input/drains/DrainRelates.csv')
spatial_dict_drain <- subset(spatial_dict_drain, select = -c(Dataset, SiteID))
spatial_dict_drain <- na.omit(spatial_dict_drain)
relates <- dplyr::left_join(relates, spatial_dict, by =('WaterRight' = 'WaterRight') )
years <- data.frame(divflows$Year, divflows$Acre_feet, divflows$Name)
#years <- dplyr::left_join(years, relates, by = c('divflows.Name' = 'NewName')) #old version
years <- dplyr::left_join(years, relates, by = c("divflows.Name" = "NewName"), relationship = "many-to-many")
years <- subset(years, select = -c(WaterRight))
years <- na.omit(years)
years <- dplyr::left_join(years, spatial_dict_drain, by = c('Name' = 'Spatial.Name'))
sums <- years %>%
select(divflows.Year, divflows.Acre_feet, NewName) %>%
group_by(divflows.Year, NewName) %>%
summarize(DivFlow = sum(divflows.Acre_feet))
data <- dplyr :: left_join(data, sums, by = c('Name' = 'NewName',
'Year' = 'divflows.Year'))
data$scale_DivFlow <- scale2sd(data$DivFlow)
write.csv(data,'/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_input/mixed_model_input_0820.csv', row.names = FALSE)
col_names <- ('')
avgs <- data %>%
select(Name, Sum_AF) %>%
group_by(Name) %>%
summarize(avg = mean(Sum_AF))
## Perform Mann Kendall Test for each drain
rf <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_input/model_input_0815.csv')
#names <- data.frame(unique(rf$Name)) # old, replaced with below
names <- unique(rf$Name)
for (i in names){
data <- subset(rf, Name == i)
test<- MannKendall(data$Sum_AF)
print(c(i, test$sl))
}
for (i in names){
data <- subset(rf, Name == i)
print(ggplot(data = data, aes(y= Sum_AF, x = Year)) +
geom_point() +
geom_smooth(method = 'lm') +
ggtitle(i) +
theme_bw())
}
change_names <- c('Conway Gulch',
'Eagle Drain',
'Fifteen Mile Creek',
'Mason Drain',
'South Middleton',
'Thurman Drain')
nochange_names <- c("Dixie Drain",
"Drainage District No3",
"East Hartley Gulch",
"Indian Creek",
"Mason Creek",
"North Middleton",
"Sand Run Gulch",
"West Hartley Gulch",
"Willow Creek")
change_plots <- function(dataframe, name){
plt <- ggplot(data = dataframe, aes(y= Sum_AF, x = Year)) +
geom_point() +
stat_smooth(method = 'lm', color = 'black') +
ggtitle(name) +
ylab('Discharge (AF)') +
theme_bw() +
theme(text = element_text(size = 15)) +
scale_y_continuous(labels = scales::comma)
return(plt)
}
myplots <- list()
values <- list()
change <- list()
for (i in change_names) {
p <- change_plots(subset(rf, Name == i), i)
vals <- ggplot_build(p)$data[[2]]  # Ensure this index is correct
# Filter out non-finite values from vals
vals <- vals[is.finite(vals$y) & is.finite(vals$ymin), ]
if(nrow(vals) > 0) {  # Check if there are any rows left after filtering
values[[i]] <- vals
percent_decrease <- (max(vals$y) - min(vals$y)) / max(vals$y)
print(c(i, 'Percent Decrease:', percent_decrease))
print(c(i, '1987 Value:', max(vals$y), max(vals$y) - vals$ymin[1]))
print(c(i, '2020 Value:', min(vals$y), min(vals$y) - vals$ymin[nrow(vals)]))
change[[i]] <- max(vals$y) - min(vals$y)
myplots[[i]] <- p
} else {
print(paste(i, "contains only non-finite values in 'y'."))
}
}
change <- data.frame(change)
sum(change)
ggarrange(plotlist = myplots, ncol=3, nrow=2)
ggsave('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_output/Figures/mk_fig.jpg',
width = 9,
height = 5,
units = 'in')
mynoplots <- list()
for (i in nochange_names){
p <- change_plots(subset(rf, Name == i), i)
mynoplots[[i]] <- p
}
ggarrange(plotlist = mynoplots, ncol = 3, nrow=3)
ggsave('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_output/Figures/nosig_mk_fig.jpg',
width = 13,
height = 10,
units = 'in')
names <- unique(rf$Name)
for (i in names) {
sub <- subset(rf, Name == i)
print(c(i, length(sub$Sum_AF)))
}
rf_drop <- rf[rf$Name != 'Sand Run Gulch',]
sums <- rf_drop %>%
group_by(Year) %>%
summarize(total = sum(Sum_AF))
MannKendall(sums$total)
sum_plot <- ggplot(data = sums, aes(x = Year, y = total)) +
geom_point() +
theme_bw() +
geom_smooth(method = 'lm') +
ylab('Total Discharge (AF/yr)') +
xlab('Year')
## INPUT THE DATA ##
## -------------- ##
data <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_input/model_input_0820.csv')
na_data <- data[is.na(data)] # Check for NA data in the file
data <- data[-c(1)] # Remove python index value column
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_output/Figures/acreft_hist.pdf',
width=6,
height=4)
ggplot(data=data)+
aes(x=Sum_AF)+
geom_histogram(color='black', binwidth = 5000)+
ylab('Count')+
xlab('Annual Discharge (AF/yr)')+
theme_bw()
dev.off()
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_output/Figures/SD_AF_hist.pdf',
width=6,
height=4)
ggplot(data=data)+
aes(x=SD_AF)+
geom_histogram(color='black', binwidth = 5000)+
ylab('Count')+
xlab('Annual Discharge (AF/yr)')+
theme_bw()
dev.off()
urb_change <- data %>%
select(Name, class1_urban, Sum_AF) %>%
group_by(Name) %>%
summarize(change = max(class1_urban) - min(class1_urban),
maximum = max(class1_urban),
AF = mean(Sum_AF))
names <- unique(data$Name)
for (i in names){
subdata <- subset(data, Name == i)
model <- lm(Sum_AF ~ Year, data = subdata)
slope <- coef (model)[2]
r_squared <- summary(model)$r.squared
plot_title <- paste (i, "\nSlope:", round(slope,2), "R-squared:",round(r_squared, 2))
print(ggplot(data = subdata) +
aes(x = Year, y = Sum_AF) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw() +
xlab('Year') +
ylab('Discharge (AF)') +
ggtitle(plot_title))
}
for (i in names){
subdata <- subset(data, Name == i)
print(ggplot(data = subdata) +
aes(x = class1_urban, y = Sum_AF) +
geom_point() +
geom_smooth(method = 'lm', color = '#00798c', fill = '#00798c') +
theme_bw() +
xlab('Urban Proportion') +
ylab('Discharge (AF)') +
ggtitle(i))
}
paletteer_d("colorBlindness::Blue2DarkOrange12Steps")
pal <- paletteer_d("colorBlindness::paletteMartin")
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/Drains_Lower_Boise_River/model_output/Figures/regress.pdf',
width=8,
height=5)
ggplot(data = data) +
aes(x = class1_urban, y = Sum_AF, fill = Name, color=Name) +
geom_point() +
scale_shape(solid = FALSE) +
geom_smooth(method = 'lm', aes(color = Name, fill = Name)) +
scale_fill_manual(values =c('#000000FF',
'#004949FF',
'#009292FF',
'#FF6DB6FF',
'#FFB6DBFF',
'#490092FF',
'#006DDBFF',
'#B66DFFFF',
'#6DB6FFFF',
'#B6DBFFFF',
'#920000FF',
'#924900FF',
'#DB6D00FF',
'#31A354',
'#FFAD65FF')) +
scale_color_manual(values =c('#000000FF',
'#004949FF',
'#009292FF',
'#FF6DB6FF',
'#FFB6DBFF',
'#490092FF',
'#006DDBFF',
'#B66DFFFF',
'#6DB6FFFF',
'#B6DBFFFF',
'#920000FF',
'#924900FF',
'#DB6D00FF',
'#31A354',
'#FFAD65FF'))+
theme_bw() +
xlab('Urban Proportion') +
ylab('Discharge (AF)') +
ylim(0, 120000)
